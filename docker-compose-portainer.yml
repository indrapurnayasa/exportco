version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: exportco_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-hackathondb}
      POSTGRES_USER: ${POSTGRES_USER:-maverick}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-maverick1946}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-maverick}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Application
  api:
    build:
      context: https://github.com/indrapurnayasa/exportco.git
      dockerfile: Dockerfile
    container_name: exportco_api
    ports:
      - "${PORT:-8000}:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-maverick}:${POSTGRES_PASSWORD:-maverick1946}@postgres:5432/${POSTGRES_DB:-hackathondb}
      - POSTGRES_DB=${POSTGRES_DB:-hackathondb}
      - POSTGRES_USER=${POSTGRES_USER:-maverick}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-maverick1946}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this}
      - ALGORITHM=${ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-api-key}
      - OPENAI_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL:-text-embedding-ada-002}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PROJECT_NAME=${PROJECT_NAME:-ExportCo API}
      - VERSION=${VERSION:-1.0.0}
      - DEBUG=${DEBUG:-false}
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    networks:
      - app-network
    volumes:
      - ./logs:/app/logs
      - ./backups:/app/backups
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge 